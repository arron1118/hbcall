<?php


namespace app\api\controller;

use app\common\traits\PaymentTrait;
use app\company\model\Company;
use think\facade\Config;
use Yansongda\Pay\Pay;
use app\company\model\Payment as PaymentModel;

class Payment extends \app\common\controller\ApiController
{
    use PaymentTrait;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub

        $this->model = new PaymentModel();
    }

    public function index()
    {
        $title = '喵头鹰呼叫系统 - PC场景下单并支付测试';
        // 支付宝支付
        $order = [
            'out_trade_no' => getOrderNo(),
            'total_amount' => '0.01', // **单位：分**
            'subject' => $title,
        ];

        // 微信支付
        $order = [
            'out_trade_no' => getOrderNo(),
            'total_fee' => 0.01 * 100, // **单位：分**
            'body' => $title,
        ];

        /*$wxpay = Config::get('payment.wxpay');
        dump($wxpay);

        $pay = Pay::wechat(Config::get('payment.wxpay'))->scan($order);
        dump($pay);
        $qr = new QRCode();
        echo '<img src="' . $qr->render($pay->code_url) . '" />';*/
        // $pay->appId
        // $pay->timeStamp
        // $pay->nonceStr
        // $pay->package
        // $pay->signType
        // 支付

//        return Pay::alipay(Config::get('payment.alipay.web'))->web($order)->send();
//        return Pay::wechat(Config::get('payment.wxpay'))->web($order)->send();
    }

    /**
     * 微信支付回调
     * @return \Symfony\Component\HttpFoundation\Response
     * @throws \Yansongda\Pay\Exceptions\InvalidArgumentException
     */
    public function notify()
    {
        $pay = Pay::wechat(Config::get('payment.wxpay'));

        try{
            $data = $pay->verify(); // 是的，验签就这么简单！

            if ($data->result_code === 'SUCCESS') {
                $mt = mktime(
                    substr($data->time_end, 8, 2),
                    substr($data->time_end, 10, 2),
                    substr($data->time_end, 12, 2),
                    substr($data->time_end, 4, 2),
                    substr($data->time_end, 6, 2),
                    substr($data->time_end, 0, 4)
                );
                $paymentModel = PaymentModel::where(['payno' => $data->out_trade_no, 'status' => 0])->findOrEmpty();
//            $paymentModel->startTrans();
                if (!$paymentModel->isEmpty()) {
                    $paymentModel->pay_time = $mt;
                    $paymentModel->payment_no = $data->transaction_id;
                    $paymentModel->status = 1;
                    $paymentModel->save();

                    $this->updateUserAmount($paymentModel);
                }
            }
        } catch (\Exception $e) {
            // $e->getMessage();
        }

        return $pay->success()->send();// laravel 框架中请直接 `return $pay->success()`
    }

    public function alipayNotify()
    {
        $alipay = Pay::alipay(Config::get('payment.alipay.web'));

        try {
            $data = $alipay->verify();

            if ($data->trade_status === 'TRADE_SUCCESS') {
                $paymentModel = PaymentModel::where(['payno' => $data->out_trade_no, 'status' => 0])->findOrEmpty();
                if (!$paymentModel->isEmpty()) {
                    $paymentModel->pay_time = strtotime($data->gmt_payment);
                    $paymentModel->payment_no = $data->trade_no;
                    $paymentModel->status = 1;
                    $paymentModel->save();

                    $this->updateUserAmount($paymentModel);
                }
            }
        } catch (\Exception $e) {
        }

        return $alipay->success()->send();
    }

    /**
     * 更新用户余额
     * @param $patmentModel
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\DbException
     * @throws \think\db\exception\ModelNotFoundException
     */
    protected function updateUserAmount($paymentModel)
    {
        $userInfo = Company::find($paymentModel->company_id);
        $userInfo->balance = (float)$userInfo->balance + (float)$paymentModel->amount;
        $userInfo->save();
    }

    public function alipayReturn()
    {
        dump('支付成功，正在跳转...');
    }

    /**
     * App下单支付
     * @param float $amount 支付金额
     * @param int $payType 支付类型 [1 微信支付 2 支付宝]
     * @return \Symfony\Component\HttpFoundation\Response|\think\response\Json|void
     */
    public function createAppOrder()
    {
        $amount = (float) $this->request->param('amount', 0);
        $payType = (int) $this->request->param('payType', 1);
        if ($amount <= 0) {
            return json(['code' => 0, 'msg' => '请输入正确的金额']);
        }
        $data = $this->createOrder($amount, $payType);

        if ($payType === 1) {
            $res = Pay::wechat(Config::get('payment.wxpay'))->app($data);
            return json(['code' => 1, 'msg' => 'Success', 'data' => json_decode($res->getContent())]);
        } else if ($payType === 2) {
            $res = Pay::alipay(Config::get('payment.alipay.app'))->app($data);
            return json(['code' => 1, 'msg' => 'Success', 'data' => $res->getContent()]);
        }
    }
}
